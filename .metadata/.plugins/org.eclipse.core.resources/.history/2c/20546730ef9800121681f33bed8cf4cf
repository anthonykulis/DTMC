/*
 * graph.h
 *
 *  Created on: Mar 29, 2013
 *      Author: kulis
 */

#ifndef GRAPH_H_
#define GRAPH_H_

#define _G_STACK_SIZE 256

typedef struct {

	int north;
	int north_visited;
	int *right_of_north = NULL;

	int south;
	int south_visited;
	int *right_of_south = NULL;

	int west;
	int west_visited;
	int *right_of_west = NULL;

	int east;
	int east_visited;
	int *right_of_east = NULL;

} _g_node;

//note, NORTH is traversing down tree, SOUTH is up it.
//also note, these directions are in specific order
enum heading { EAST, NORTH, WEST, SOUTH };



_g_node Graph[_G_STACK_SIZE];

int get_sr();
int get_hd();
void _g_push(int north, int east, int west, int south);
void _g_pop();
int get_next_direction(int east, int north, int west, int south);
#endif /* GRAPH_H_ */
