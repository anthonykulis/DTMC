/*
 * tt.c
 *
 *  Created on: Apr 4, 2013
 *      Author: kulis
 */

#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <pthread.h>

struct thread_data {

	int id;
	int phase;
	int period;
	int relative_deadline;
	int execution_time;
	int complete;

};

void* p1_task(void *thread_arg){

	struct thread_data *td = (struct thread_data *)thread_arg;
	td->complete = 0;
	fprintf(stdout, "Doing task\n");
	usleep(td->execution_time);
	td->complete = 1;
	fprintf(stdout, "Done\n");

	pthread_exit(NULL);
}

void* sched(void *thread_arg){


}

int main(){

	struct thread_data t;
	t.execution_time = 100000;
	t.id = 1;
	t.period = 100;
	t.phase = 0;
	t.relative_deadline = 200000;
	pthread_t t1;
	int rc = pthread_create(&t1, NULL, p1_task, (void *) &t);

	pthread_exit(NULL);
}
